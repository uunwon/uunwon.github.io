<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.6.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-08-10T14:33:24+09:00</updated><id>http://localhost:4000/</id><title>UUNWON</title><subtitle>Student at Korea Polytechnic University</subtitle><entry><title>Linux and Unix</title><link href="http://localhost:4000/Linux-Unix/" rel="alternate" type="text/html" title="Linux and Unix" /><published>2020-08-10T00:00:00+09:00</published><updated>2020-08-10T00:00:00+09:00</updated><id>http://localhost:4000/Linux-Unix</id><content type="html" xml:base="http://localhost:4000/Linux-Unix/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;os&quot;&gt;OS&lt;/h2&gt;

&lt;p&gt;　운영체제(OS: Operating System)은 컴퓨터의 주기억장치 내에 상주하면서 사용자와 컴퓨터 시스템 사이의 인터페이스를 담당하여 컴퓨터 시스템의 전반적인 동작을 제어하고 조정하며, 사용자에게 편리성을 제공하고 한정된 시스템 자원을 효율적으로 사용할 수 있도록 관리하는 여러 시스템 프로그램들의 집합을 말한다. 즉 운영체제를 구성하는 프로그램들은 하드웨어와 응용프로그램 간의 인터페이스 역할을 하면서 중앙처리장치(CPU), 주기억장치, 입출력장치, 파일 시스템 등의 컴퓨터 자원을 관리한다.&lt;/p&gt;

&lt;p&gt;　운영체제의 종류는 매우 다양한데 컴퓨터의 용량에 따라 구분하여 개인용 컴퓨터와 중대형 컴퓨터로 그 종류를 살펴볼 수 있다. 개인용 컴퓨터에 이용하는 대표적인 운영체제로는 마이크로소프트의 윈도우 계열의 운영체제와 리눅스(Linux) 등이 있다. 중대형 컴퓨터에서 사용하는 운영체제는 유닉스(Unix) 계열의 운영체제가 주종을 이루고 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;linux&quot;&gt;Linux&lt;/h2&gt;

&lt;p&gt;　리눅스(Linux)는 핀란드의 리누스 토발즈(Linus Torvalds)에 의하여 개발된 유닉스(Unix) 기반의 운영체제이다. 이는 개인용 컴퓨터에 적합한 적합한 공개용 운영체제다. 리누스 토발즈는 소스 코드를 인터넷에 공개해 모든 사람이 자유롭게 사용할 수 있도록 하고 일반인들이 직접 리눅스의 개선에도 참여할 수 있도록 하였다.&lt;/p&gt;

&lt;p&gt;　리눅스는 무료 소프트웨어라는 장점과 유닉스에 기반한 매우 안정적인 운영체제라는 점에 급속히 확산되었다. 이는 인터넷 프로토콜인 TCP/IP를 강력하게 지원하는 등 네트워크 기능이 강화되었고, 다중 사용자, 다중 프로그래밍 방식을 지원하는 안정성 있는 운영체제이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;unix&quot;&gt;Unix&lt;/h2&gt;

&lt;p&gt;　유닉스(Unix)는 벨 연구소의 멀틱스 운영체제 팀에서 개발한 운영체제이다. 1973년 새로 개발한 언어 C를 이용하여 시스템 PDP=11을 위해 만들어졌다. 이는 다른 시스템에도 쉽게 적용하여 운영할 수 있는 이식성이 좋은 운영체제로 유명하다.&lt;/p&gt;

&lt;p&gt;　유닉스 운영체제를 구성하는 주요 요소로 커널(Kernel)과 쉘(Shell)이 있다. &lt;code class=&quot;highlighter-rouge&quot;&gt;커널&lt;/code&gt;은 운영체제의 가장 핵심이 되는 모듈로 CPU와 주기억장치를 관리하고 시스템 호출을 처리하며 주변장치를 관리하는 기능을 포함한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;쉘&lt;/code&gt;은 표준 UNIX 명령 인터프리터로서 사용자가 입력한 명령을 해석하여 그에 맞는 다른 프로그램을 실행시키는 유틸리티 프로그램이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;REFERENCE&lt;/h4&gt;
&lt;p class=&quot;notice&quot;&gt;모바일 시대의 컴퓨터개론, INFINITY BOOKS&lt;/p&gt;</content><category term="computer" /><category term="linux" /><category term="unix" /><summary></summary></entry><entry><title>DBMS(DataBase Management System)</title><link href="http://localhost:4000/DBMS/" rel="alternate" type="text/html" title="DBMS(DataBase Management System)" /><published>2020-08-10T00:00:00+09:00</published><updated>2020-08-10T00:00:00+09:00</updated><id>http://localhost:4000/DBMS</id><content type="html" xml:base="http://localhost:4000/DBMS/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;database&quot;&gt;Database&lt;/h2&gt;

&lt;p&gt;　데이터베이스(Database)는 간단히 ‘관련 있는 데이터의 저장소’라고 볼 수 있다. 자세히 말해, 데이터베이스는 여러 사람이나 응용시스템에 의해 참조 가능하도록 서로 논리적으로 연관되어 통합 관리되는 데이터의 모임이다. 데이터베이스에 저장된 자료는 데이터를 추가하고, 공유하고, 찾고, 정렬하는 등의 여러 조작을 통하여 정보로 활용될 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;dbms&quot;&gt;DBMS&lt;/h2&gt;

&lt;p&gt;　데이터베이스 관리시스템(DBMS: DataBase Management System)은 사용자가 데이터베이스를 만들고, 유지 관리할 수 있도록 돕는 프로그램을 말한다. 데이터와 응용 프로그램 사이에서 중재자 역할을 하며 모든 프로그램들이 데이터베이스를 유용하여 활용할 수 있도록 관리해 주는 소프트웨어이다. DBMS의 종류를 살펴보면 Oracle, DB2, Sybase, Ingres, Postgres, mSQL, MySql, SQL Server 등 매우 다양하다.&lt;/p&gt;

&lt;p&gt;　즉, 데이터베이스는 ‘관련 있는 데이터의 저장소’이고, 데이터베이스 관리시스템은 ‘데이터베이스를 관리하는 소프트웨어’이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-mysql&quot;&gt;🗄 MySQL&lt;/h2&gt;

&lt;p&gt;　MySQL은 대표적인 오픈 소스 DBMS 제품으로 데이터베이스 시스템을 공부하는 학생들에게 아주 인기가 좋은 DBMS이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;내부 구성 및 이식성: C 및 C++로 기술되었고, 다양한 플랫폼에서 동작한다.&lt;/li&gt;
  &lt;li&gt;보안: 매우 유연하고 안전한 특권 및 패스워드 시스템이다.&lt;/li&gt;
  &lt;li&gt;확장성과 범위: 대규모 데이터베이스를 처리한다.&lt;/li&gt;
  &lt;li&gt;접속성: 클라이언트는 모든 플랫폼에서 TCP/IP 소켓을 사용해 MySQL 서버에 접속할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-oracle&quot;&gt;🗄 Oracle&lt;/h2&gt;

&lt;p&gt;　오라클 사에서 개발한 오라클은 관계 데이터베이스 관계 시스템(RDBMS)의 이름으로, 유닉스 환경에서 사용되는 RDBMS로는 가장 널리 사용되는 대표적인 제품 중 하나이다. 검색ㆍ갱신용 언어로는 국제 표준화 기구(ISO)에서 표준화한 구조화 조회 언어(SQL)가 표준이 되어 있다. 오라클은 인터넷의 성장과 함께 기업용 대규모 데이터베이스 시스템의 DBMS로 자리잡았다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-sqlite&quot;&gt;🗄 SQLite&lt;/h2&gt;

&lt;p&gt;　스마트폰, 태블릿과 같은 다양한 모바일 기기의 보금에 따라 모바일 기기에 기본적으로 탑재되는 작지만 빠른 개인용 임베디드 데이터베이스 엔진이 많이 활용되고 있다. 대표적인 데이터베이스 엔진이 SQLite 이다. 이는 데이터베이스 엔진을 위한 소프트웨어 라이브러리로, iOS와 안드로이드 등 모바일 환경에 많이 내장되어 사용되고 있다.&lt;/p&gt;

&lt;p&gt;　SQLite는 리차드 힙(Richard Hipp)이 DBMS를 사용하지 않고 활용할 수 있는 데이터베이스 엔진으로 개발하였으며, C로 구현되어 용량이 작고 가벼우면서도 안정적이며, 서버가 따로 필요하지 않아 시스템의 임베디드 데이터베이스로 많이 활용되고 있다.&lt;/p&gt;

&lt;h3 id=&quot;-android-sqlite&quot;&gt;* Android SQLite&lt;/h3&gt;

&lt;p&gt;　안드로이드에서는 어플리케이션의 효과적인 데이터 관리를 위하여 구조화된 내부 SQL Database인 SQLite Database를 지원하고 있습니다. 어플리케이션 사용 과정에서 발생하는 용량이 크지 않은 데이터들은 굳이 서버에 접속하는 수고를 들이지 않고 내부 데이터베이스를 관리할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;REFERENCE&lt;/h4&gt;
&lt;p class=&quot;notice&quot;&gt;모바일 시대의 컴퓨터개론, INFINITY BOOKS &lt;br /&gt;
모바일 SQLite: https://m.blog.naver.com/nife0719/221035148567&lt;/p&gt;</content><category term="computer" /><category term="database" /><summary></summary></entry><entry><title>Object Oriented Programming</title><link href="http://localhost:4000/Object-Oriented-Programming/" rel="alternate" type="text/html" title="Object Oriented Programming" /><published>2020-08-07T00:00:00+09:00</published><updated>2020-08-07T00:00:00+09:00</updated><id>http://localhost:4000/Object-Oriented-Programming</id><content type="html" xml:base="http://localhost:4000/Object-Oriented-Programming/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;객체지향-프로그래밍&quot;&gt;객체지향 프로그래밍&lt;/h2&gt;

&lt;p&gt;　고급 언어 중에서 프로그램 방식으로 언어를 분류하면 주로 절차지향(procedural) 언어와 객체지향(object oriented) 언어로 나뉜다. 절차지향이 동사 중심이라면 객체 지향은 명사 중심의 프로그래밍 방식이다. 절차지향 언어는 문제를 여러 개의 작은 함수로 나누어 그 문제를 해결하는 반면에 객체지향 언어는 문제를 구성하는 객체를 만들어 이 객체들 간의 메시지 교환으로 그 문제를 해결한다.&lt;/p&gt;

&lt;p&gt;　객체(object)란 현실 세계의 사물이나 개념을 시스템에서 이용하기 위해 현실 세계를 자연스럽게 표현하여 손쉽게 이용할 수 있도록 만든 소프트웨어 모델이다. 객체는 속성(attributes, properties)과 행동(messages, behaviors)으로 구성된다. 속성은 객체의 특성을 표현하는 정적인 성질이며, 행동은 객체 내부의 일을 처리하거나 객체들 간에 서로 영향을 주고받는 동적인 일을 처리하는 단위이다.&lt;/p&gt;

&lt;p&gt;　객체는 시스템에서 이용되는 공학적인 규칙을 가질 수 있으나 그 규칙은 일상 생활의 모델링에서 나온 규칙이므로 누구나 손쉽게 이해할 수 있는 요소를 갖는다. 이 모델링 과정에서 객체지향 특징인 추상화(abstraction), 상속성(inheritance), 캡슐화(encapsulation), 다형성(polymorphism)을 이용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;구분&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;절차지향&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;객체지향&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;프로그래밍방식&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;동사&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;명사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;모듈단위&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;함수 또는 프로시저&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;속성과 행동을 표현한 객체&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;언어&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;FORTRAN, BASIC, COBOL, PASCAL, C 등&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Object Pascal, Visual Basic, C#, C++, Java 등&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;자바&quot;&gt;자바&lt;/h2&gt;

&lt;p&gt;　자바의 시초는 가전제품들을 제어하기 위해 고안한 언어에서부터 비롯되었기에, 작은 메모리와 느린 CPU와는 상관없이 효율적으로 작동하여야 했고 그 결과 운영체제나 CPU와는 독립적으로 실행 가능한 프로그래밍 언어가 개발되었다. 1995년 공식 발표되었으며 프로그래밍 언어 C++을 기반으로 한 객체지향 프로그래밍 언어이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;인터넷 응용 시스템 개발을 위한 이상적인 프로그래밍 언어&lt;/li&gt;
  &lt;li&gt;C++ 기반으로 만들어진 배우기 쉽고, 이용하기 간편한 객체지향 언어&lt;/li&gt;
  &lt;li&gt;플랫폼에 독립적인 언어 - 자바 프로그램의 실행은 운영체제의 자바 가상 머신 위에서 인터프리터 방식으로 동작하므로 프로그램의 속도가 떨어진다는 단점이 있다. 이 자바 가상 기계가 각종 플랫폼에 소프트웨어나 하드웨어로 존재하여 그 플랫폼에서 바이트코드가 실행될 수 있도록 하는 역할을 담당한다.&lt;/li&gt;
  &lt;li&gt;이식성이 높고, 다중 스레드를 지원한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;notice&quot;&gt;
package jump2java; &lt;br /&gt;
&lt;br /&gt;
public class HelloWorld{ &lt;br /&gt;
　　publice static void main(String[] args){ &lt;br /&gt;
　　　　System.out.println(&quot;Hello, world!&quot;); &lt;br /&gt;
　　} &lt;br /&gt;
}
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;c&quot;&gt;C#&lt;/h2&gt;

&lt;p&gt;　C#은 모든 것을 객체로 취급하는 컴포넌트 프로그래밍 언어이다. 이는 자바와 C++에 기본을 둔 언어로 자바와 매우 비슷하다. 또한 웹을 통해 정보와 서비스를 교환하고, 개발자들이 이식성 높은 응용프로그램들을 만들어낼 수 있게 고안되었다. C#으로 작성한 코드가 컴파일되면 중간 언어인 MSIL이 되고, 이 중간 언어가 인터프리터인 CLR에 의해 실행되므로 C#은 시스템에 독립적인 프로그램 개발이 가능하다.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
using System; &lt;br /&gt;
&lt;br /&gt;
class HelloWorld{ &lt;br /&gt;
　　static void Main(string[] args){ &lt;br /&gt;
　　　　Console.WriteLine(&quot;Hello, world!&quot;); &lt;br /&gt;
　　} &lt;br /&gt;
}
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;파이썬&quot;&gt;파이썬&lt;/h2&gt;

&lt;p&gt;　파이썬 언어는 현재 대학에서 컴퓨터 기초과목으로 가장 많이 가르치는 프로그래밍 중 하나이다. 파이썬은 간단하면서 효과적으로 객체지향을 적용할 수 있는 강력한 프로그래밍 언어이며, 인터프리터 언어로 간단한 문법구조를 가진 대화형 언어이다. 또한 동적 자료형을 제공하여, 변수를 선언하지 않고 사용할 수 있으며 여러 플랫폼에서 사용되는 다양한 영역에 활용될 수 있는 프로그램을 쉽고 빠르게 개발할 수 있다는 장점이 있다.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
print(&quot;Hello World!&quot;);
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;REFERENCE&lt;/h4&gt;
&lt;p class=&quot;notice&quot;&gt;모바일 시대의 컴퓨터개론, INFINITY BOOKS&lt;/p&gt;</content><category term="computer" /><category term="java" /><category term="c#" /><category term="python" /><summary></summary></entry><entry><title>High Level Programming Language</title><link href="http://localhost:4000/High-Level-Programming-Language/" rel="alternate" type="text/html" title="High Level Programming Language" /><published>2020-08-07T00:00:00+09:00</published><updated>2020-08-07T00:00:00+09:00</updated><id>http://localhost:4000/High-Level-Programming-Language</id><content type="html" xml:base="http://localhost:4000/High-Level-Programming-Language/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;고급-프로그래밍-언어&quot;&gt;고급 프로그래밍 언어&lt;/h2&gt;

&lt;p&gt;　고급 프로그래밍 언어란 사람이 이해하기 쉽게 작성된 프로그래밍 언어로서, 저급 프로그래밍 언어보다 가독성이 높고 다루기 간단하다는 장점이 있다. 컴파일러나 인터프리터에 의해 저급 프로그래밍 언어로 번역되어 실행된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;포트란&quot;&gt;포트란&lt;/h2&gt;

&lt;p&gt;　포트란(FORTRAN)은 FoRmula TRANslating system(수식 번역 시스템)의 약자로서 과학과 공학 및 수학적 문제들을 해결하기 위해 1950년대 중반에 IBM 704 컴퓨터 시스템에 이용할 목적으로 고안한 3세대 프로그래밍 언어이다. 기본적인 수리 자료 처리와 계산을 위주로 만들어졌기 때문에 매우 간결하여 배우기가 용이하다. 그러나 배우기는 쉽지만 문법이 엄격하다는 애로 사항이 있다. 이는 가장 오래된 언어 중의 하나이지만 언어 구조가 단순해 지금도 기술 계산 분야 등에서는 사용되고 있다.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
program HelloWorldF90 &lt;br /&gt;
　　write(*,*) &quot;Hello, Fortran!&quot; &lt;br /&gt;
end program HelloWorldF90 &lt;br /&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;코볼&quot;&gt;코볼&lt;/h2&gt;

&lt;p&gt;　코볼은 포트란에 이어 두 번째로 개발된 고급 언어이며 기업의 사무 처리에 적합한 프로그래밍 언어로 개발되었다. 기업에서 다루는 데이터의 특성상 일정한 형식이 존재하므로 이러한 형식을 지원하므로써 대량의 데이터를 효율적으로 입력, 출력 및 처리할 수 있다. 사무처리에 목적이 있는 만큼 다른 프로그래밍 언어에 비하여 파일의 순차적인 처리 등이 효율적이다. 영어 구문과 비슷한 문장구조를 갖고 있으므로 쉽게 이해할 수 있도록 프로그램 작성이 가능하다.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
000100 IDENTIFICATION DIVISION. &lt;br /&gt;
000200 PROGRAM-ID.　HELLOWORLD. &lt;br /&gt;
000300 &lt;br /&gt;
000400*
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;베이직&quot;&gt;베이직&lt;/h2&gt;

&lt;p&gt;　베이직(BASIC)은 초보자도 쉽게 배울 수 있도록 만들어진 대화형 프로그래밍 언어이다. 대화형의 영어 단어를 바탕으로 약 200여 개의 명령어들로 구성된 가장 쉬운 대화형 프로그래밍 언어여서 문장의 종류가 많지 않고 문법이 간단하며, 배우고 쓰기가 간단하고 쉽다. 인터프리터를 사용하므로 프로그램 작성 시 프로그램상의 문제점을 쉽게 파악할 수 있다. 그러나 인터프리터를 거쳐야 하므로 실행속도가 느리다는 단점이 있다.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
10 PRINT &quot;Hello World!&quot;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;파스칼&quot;&gt;파스칼&lt;/h2&gt;

&lt;p&gt;　파스칼은 프랑스의 수학자인 파스칼(Pascal)의 이름에서 따온 언어로서 프로그램을 작성하는 방법인 알고리즘 학습에 적합하도록 개발된 프로그래밍 언어이다. 교육용으로 제작된 프로그래밍 언어이기 때문에 알고리즘의 실험이나 프로그램을 연습할 수 있는 모든 명령어가 갖추어져 있다. 또한 비교적 자유로운 구조를 가질 수 있는 다른 프로그래밍 언어와는 달리 구조적인 프로그래밍이 가능하도록 설계되어 있다. 1980년에서 1990년대까지 대부분의 대학에서 프로그래밍 언어의 교과과정으로 채택되었으며, 파스칼 기반의 통합개발환경인 델파이를 출시해 현재까지도 널리 이용하고 있다.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
program HelloWorld; &lt;br /&gt;

begin &lt;br /&gt;
　　writeln('Hello World!'); &lt;br /&gt;
end.
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;c&quot;&gt;C&lt;/h2&gt;

&lt;p&gt;　C 언어는 운영체제 유닉스(Unix)를 개발하기 위한 시스템 프로그래밍 언어로 벨 연구소의 데니스 리치가 개발하였다. C언어는 프로그램을 기계어 명령에 가까운 형태로 작성할 수 있으므로 다른 고급 언어에 비해 하드웨어에 대한 보다 확실한 통제가 가능하다. 특정 컴퓨터 기종에 의존하지 않으므로 프로그램 이식성도 높으며, 풍부한 연산자와 데이터 형을 갖고 있기 때문에 범용 프로그램 언어로서 널리 보급되었으며 응용 소프트웨어의 개발에 널리 이용되고 있다. 현재 이용되고 있는 운영체제, 컴파일러, 통합개발환경 등이 대부분 C 언어로 개발되었다.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
#include &quot;stdio.h&quot; &lt;br /&gt;
int main(void){ &lt;br /&gt;
　　printf(&quot;Hello, World!&quot;); &lt;br /&gt;
}
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;c-1&quot;&gt;C++&lt;/h2&gt;

&lt;p&gt;　1972년 개발된 C 언어는 1983년에는 프로그램 언어 C++로 발전하였다. C++는 객체지향 프로그래밍(OOP: Object Oriented Programming)을 지원하기 위해 C 언어가 가지는 장점을 그대로 계승하면서 객체의 상속성 등의 개념을 추가한 효과적인 언어이다. C++는 C 언어의 확장이라고 볼 수 있으므로 기존의 C 언어로 개발된 모든 프로그램들을 수정 없이 그대로 사용할 수 있다.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
#include &quot;iostream.h&quot; &lt;br /&gt;
int main(int argc, char* argv[]){ &lt;br /&gt;
　　std:cout &amp;lt;&amp;lt; &quot;Hello World&quot; &amp;lt;&amp;lt; std::endl; &lt;br /&gt;
}
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;스크래치&quot;&gt;스크래치&lt;/h2&gt;

&lt;p&gt;　스크래치(scratch)는 MIT 대학의 미디어랩에서 개발한 비주얼 프로그래밍 개발 도구이다. 이는 브라우저에서 직접 개발하는 환경으로 커뮤니티 기반 웹 인터페이스로 구성되어 있다. 즉 스크래치는 컴퓨터에 대한 지식이 전혀 없는 일반인과 청소년 또는 지금 바로 프로그래밍에 입문한 학생들을 대상으로 컴퓨터 프로그래밍의 개념을 이해할 수 있도록 도와주는 교육용 프로그래밍 언어이다. 다양한 이미지나 사운드를 제공하여 쉽게 사용할 수 있으며, 코딩에 의한 프로그램 방식이 아닌 직관적으로 누구나 쉽게 이해할 수 있는 블록을 끼워 맞춰 프로그램을 작성하도록 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;REFERENCE&lt;/h4&gt;
&lt;p class=&quot;notice&quot;&gt;모바일 시대의 컴퓨터개론, INFINITY BOOKS&lt;/p&gt;</content><category term="computer" /><category term="c" /><category term="c++" /><summary></summary></entry><entry><title>Raspberry PI and Arduino</title><link href="http://localhost:4000/Raspberry-Arduino/" rel="alternate" type="text/html" title="Raspberry PI and Arduino" /><published>2020-08-06T00:00:00+09:00</published><updated>2020-08-06T00:00:00+09:00</updated><id>http://localhost:4000/Raspberry-Arduino</id><content type="html" xml:base="http://localhost:4000/Raspberry-Arduino/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;개발-실험용-컴퓨터&quot;&gt;개발 실험용 컴퓨터&lt;/h2&gt;

&lt;p&gt;　학교나 실험실에서 활용할 수 있는 개발 실험용 컴퓨터 또는 마이크로컨트롤러를 내장한 보드가 출시되고 있다. 즉 중앙처리 장치와 보드, 운영체제인 리눅스 그리고 다른 기기를 연결할 수 있는 다양한 인터페이스로 구성된 &lt;strong&gt;라즈베리 파이&lt;/strong&gt;와 간단히 마이크로컨트롤러를 내장한 보드로 구성된 &lt;strong&gt;아두이노&lt;/strong&gt;가 대표적이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;라즈베리-파이&quot;&gt;라즈베리 파이&lt;/h2&gt;

&lt;p&gt;　라즈베리 파이(Raspberry Pi)는 영국의 자선 교육 재단인 라즈베리 파이에서 개발한 신용카드 크기의 초소형 컴퓨터이다. 라즈베리 파이는 CPU는 ARM 프로세서를 사용하며, 운영체제는 리눅스를 사용한다. 라즈베리 파이는 초소형 보드 위에 그래픽 프로세서, 이더넷, 그리고 외부 기기의 연결을 위한 핀과 포트가 있으며, 하드 디스크 드라이브는 내장하고 있지 않으며, SD 카드 슬롯이 제공되어 SD 카드를 외부 기억 장치로 사용한다. 라즈베리 파이를 제어하는 프로그램은 프로그래밍 언어인 파이썬, 자바, 베이직, 펄, C 등을 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;　라즈베이 파이를 사용하여 다양한 기기를 연결한 새로운 창작품을 만들어 낼 수 있으므로 라즈베리 파이는 다양한 분야에서 활용할 수 있는 무한한 잠재력을 지니고 있다. (이는 디지털 신호를 처리한다)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;아두이노&quot;&gt;아두이노&lt;/h2&gt;

&lt;p&gt;　아두이노(Arduino)는 오픈 소스를 기반으로 마이크로컨트롤러를 내장한 기기 제어용 보드이다. 이 아두이노 보드는 다양한 센서나 부품 등의 장치를 연결할 수 있도록 인터페이스를 제공한다. 아두이노는 손쉽게 컴퓨터와 연결해 소프트웨어를 로드하면 동작하도록 구성된 하드웨어와 소프트웨어 기반의 ‘오픈 소스 전자 플랫폼’이라 할 수 있다. (이는 아날로그 신호를 처리한다)&lt;/p&gt;

&lt;p&gt;　이는 여러 스위치나 센서로부터 값을 받아들여, LED나 모터와 같은 외부 전자 장치들을 통제함으로써 환경과 상호작용이 가능한 물건을 만들어낼 수 있다. 아두이노가 인기를 끄는 이유는 다양한 입출력 장치를 연결하여 마이크로컨트롤러를 쉽게 동작시킬 수 있기 때문이다. 아두이노는 웨어러블 컴퓨터에 활용될 수 있도록 옷에 부착할 수 있는 보드 등 다양한 보드를 제공하는데, 가장 기본이 되는 표준 보드는 아두이노 우노라는 보드이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;REFERENCE&lt;/h4&gt;
&lt;p class=&quot;notice&quot;&gt;모바일 시대의 컴퓨터개론, INFINITY BOOKS&lt;/p&gt;</content><category term="computer" /><summary></summary></entry><entry><title>WEB</title><link href="http://localhost:4000/Web/" rel="alternate" type="text/html" title="WEB" /><published>2020-08-05T00:00:00+09:00</published><updated>2020-08-05T00:00:00+09:00</updated><id>http://localhost:4000/Web</id><content type="html" xml:base="http://localhost:4000/Web/">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;web&quot;&gt;WEB&lt;/h2&gt;

&lt;p&gt;　1990년 웹(web)이라는 것이 정보 공유 목적으로 만들어면서 인터넷을 이용한 정보 혁명은 시작되었다. 웹이 학술 목적이 아닌 일반인들에게 전파되기 시작한 것이 1990년 중반이라면 약 20여 년 동안 웹에 의하여 우리의 생활 모습이 과거와는 전혀 다른 모습으로 변하였다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;web-10&quot;&gt;WEB 1.0&lt;/h2&gt;

&lt;p&gt;　웹 1.0은 웹 2.0이 유행하기 전의 월드 와이드 웹(WWW: World Wide Web) 상태를 말한다. 1990~2000년 기간 동안에 있던 대부분의 웹사이트를 말하며, 기본적인 개념은 디렉토리 검색을 말한다. 검색의 대상이 고정되어 있으며, 콘텐츠 생산 주체자가 생산한 콘텐츠를 일방적으로 사용한 서비스들이 전부였다. 즉, 사용자들은 카테고리에서 원하는 자료를 찾는, 단순한 활동만 할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;web-20&quot;&gt;WEB 2.0&lt;/h2&gt;

&lt;p&gt;　단방향 의사소통 방식인 웹 1.0을 지나 웹 2.0은 개방과 참여 정신을 바탕으로, 콘텐츠 생산도 일반인이 자발적으로 참여할 수 있으며 서비스도 자유로이 가능해진 것을 말한다. 웹 2.0은 웹이 출현한 이후 21세기에 대한 인터넷 또는 웹에 대한 방향성을 제시한 일종의 패러다임이었다. 표준화 작업을 수행한 과정으로, 웹 2.0의 기술 표준을 살펴보면 수정되는 웹 사이트 정보를 쉽게 확인할 수 있도록 만들어진 기술 표준인 &lt;code class=&quot;highlighter-rouge&quot;&gt;RSS&lt;/code&gt;, 개인화된 정보를 공유하는 블로그인 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹로그&lt;/code&gt; 등을 볼 수 있다.&lt;/p&gt;

&lt;p&gt;　당시의 웹이란 모든 사람이 이미 제공되는 데이터를 활용하여 다양한 신규 서비스를 생산해 낼 수 있는 플랫폼으로서의 웹 환경을 의미하며 사용자 중심의 커뮤니티에 의존하는 동적인 열린 공간으로서의 웹을 말한다. 2000년대 많은 기업들이 웹 2.0의 패러다임을 추구하였으며, 이를 적절히 구현한 대표적인 기업이 구글이다. 구글은 다양한 응용 프로그램 인터페이스(API: Application Programming Interface)를 제공한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;개방, 참여, 공유&lt;/li&gt;
  &lt;li&gt;가벼워진 웹 소프트웨어와 풍부한 UX 바탕&lt;/li&gt;
  &lt;li&gt;단순한 웹이 아닌 플랫폼으로서의 웹&lt;/li&gt;
  &lt;li&gt;집단 지성을 통한 데이터 기반&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;web-30&quot;&gt;WEB 3.0&lt;/h2&gt;

&lt;p&gt;　웹 2.0 이후 2010년대의 패러다임으로 개인 중심의 서비스로 창의성이 최대한 발휘될 수 있는 웹을 말한다. 시맨틱 웹 기술에 의한 지능화된 웹 환경을 구축해 컴퓨터가 정보자원의 의미까지 이해하고, 이를 바탕으로 논리적 추론까지 함으로써 이용자의 패턴을 추론해 사용자가 요청하는 적절한 서비스를 제공하는 지능형 웹을 말한다.&lt;/p&gt;

&lt;p&gt;　즉, 컴퓨터가 알아서 이용자의 정보를 파악하여 원하는 정보를 보여주는 역할을 하며, 인공지능과 같이 알아서 사람들이 원하는 정보를 출력해주는 것을 예시로 들 수 있다. 지능화된 웹이 원하는 콘텐츠를 제공한다는 것이 포인트이다. 웹 기반 비동기 통신기술 예시로 Ajax(Asynchronous Javascript And XML)을 들 수 있는데, 기존에 새로운 데이터를 불러오려면 전체 페이지를 다시 로딩해야 했던 것과 다르게, 필요한 서비스만을 서버에 호출하며 그 결과를 화면에 적용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;REFERENCE&lt;/h4&gt;
&lt;p class=&quot;notice&quot;&gt;모바일 시대의 컴퓨터개론, INFINITY BOOKS &lt;br /&gt;
https://inform-you.tistory.com/8&lt;/p&gt;</content><category term="web" /><summary></summary></entry><entry><title>About Computer</title><link href="http://localhost:4000/Computer/" rel="alternate" type="text/html" title="About Computer" /><published>2020-08-04T00:00:00+09:00</published><updated>2020-08-04T00:00:00+09:00</updated><id>http://localhost:4000/Computer</id><content type="html" xml:base="http://localhost:4000/Computer/">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/icon/computer.png&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;about-computer&quot;&gt;About Computer&lt;/h2&gt;

&lt;p&gt;　컴퓨터(computer)는 영어 단어 ‘compute + er’로 구성되며 전자계산기로 번역된다. 즉, 용어가 의미하는 컴퓨터의 간단한 정의는 &lt;code class=&quot;highlighter-rouge&quot;&gt;전자적으로 계산을 수행하는 장치&lt;/code&gt;이다. 컴퓨터는 빠르고 정확한 계산을 위해 처리(process), 저장(store), 입력(input), 출력(output) 기능을 수행한다. 컴퓨터가 수행하는 계산의 대상을 데이터(data) 또는 자료라 하며 처리 기능을 거쳐 출력된 의미 있는 자료를 정보(information)라 한다.&lt;/p&gt;

&lt;p&gt;　컴퓨터는 기본적으로 전기가 흐르거나 흐르지 않는 정보(ON/OFF)를 의미하는 1과 0의 두 가지 신호인 디지털 데이터만을 인식하므로 컴퓨터 외부의 문자, 영상, 음성과 같은 여러 형태의 데이터는 컴퓨터 내부에서 모두 디지털 데이터로 변환되어 처리된다. 따라서 컴퓨터는 1과 0의 조합으로 구성된 문자, 숫다 등의 데이터를 처리ㆍ계산함으로써 원하는 결과를 얻을 수 있다. 컴퓨터는 컴퓨터의 처리를 명령하는 여러 명령 집합(instruction set)에 의하여 처리 기능을 수행한다. 이러한 명령어 집합이 프로그램(program)이며 처리, 저장, 입력, 출력 4가지 기능의 관점에서 컴퓨터를 정의하면 다음과 같다.&lt;/p&gt;

&lt;p class=&quot;notice_success&quot;&gt;컴퓨터는 원하는 결과를 얻기 위해 입력기능을 이용하여 데이터를 디지털로 변환하고 처리, 저장 기능을 이용하여 데이터를 처리하며, 변환된 정보를 출력 기능을 이용하여 적절한 출력장치로 출력할 수 있는 전자적 장치이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;computer-component&quot;&gt;Computer Component&lt;/h2&gt;

&lt;p&gt;　우리가 흔히 보는 모니터, 하드디스크, 프린트 등과 같은 물리적인  부분 즉 &lt;strong&gt;하드웨어(hardware)&lt;/strong&gt;와 컴퓨터의 행동을 지시하는 프로그램인 &lt;strong&gt;소프트웨어(software)&lt;/strong&gt;로 이루어져 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;-hardware&quot;&gt;💻 Hardware&lt;/h2&gt;

&lt;p&gt;　하드웨어는 데이터의 입력, 처리, 출력을 제어하는 데 사용되는 물리적 기계 장치(device)로 구성된다. 하드웨어의 중요한 구성 요소로는 중앙처리장치(CPU: Central Processing Unit), 주기억장치(main memory), 보조기억장치(secondary memory), 입력장치(input memory), 출력장치(output device)를 들 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;입력장치&quot;&gt;입력장치&lt;/h3&gt;
&lt;p&gt;　데이터 처리를 위하여 데이터를 컴퓨터 내부로 입력하는 기계이다. 대부분의 컴퓨터에 설치되어 있는 가장 흔한 입력장치로는 키보드와 마우스를 들 수 있다.&lt;/p&gt;

&lt;h3 id=&quot;중앙처리장치&quot;&gt;중앙처리장치&lt;/h3&gt;
&lt;p&gt;　중앙처리장치(CPU: Central Processing Unit)은 입력된 자료를 적절한 자료로 변환하기 위하여 소프트웨어로부터 받은 명령어를 실행하는 장치이다. 연산을 수행하는 연산장치(ALU: Arithmetic Logic Unit)와 연산을 제어하는 제어장치(control unit)로 구성되며 이 중앙장치의 칩을 프로세서라 한다. 중앙처리장치는 마이크로프로세서 또는 줄여서 프로세서라고도 부르며 사람에 비유하면 머리에 해당하는 매우 중요한 컴퓨터의 구성 요소이다.&lt;/p&gt;

&lt;h3 id=&quot;주기억장치&quot;&gt;주기억장치&lt;/h3&gt;
&lt;p&gt;　컴퓨터가 데이터를 정보로 변환하는 주요 작업을 수행하는 곳은 중앙처리장치와 주기억장치(main memory)이다. 주기억장치는 마더보드에 장착되며 현재 CPU에서 처리 중인 프로그램과 데이터를 임시로 저장하는 데 이용된다. 주기억장치는 임의 접근 메모리로 RAM(Random Access Memory)이라 하는데 이는 메모리의 임의의 위치에 데이터를 읽거나 쓸 수 있음을 의미한다. 이는 전원을 끄게 되면 저장된 자료가 모두 사라지는 휘발성 메모리다.&lt;/p&gt;

&lt;h3 id=&quot;보조기억장치&quot;&gt;보조기억장치&lt;/h3&gt;
&lt;p&gt;　보조기억장치는 프로그램이나 데이터를 저장하기 위한 저장 공간으로 간단히 저장장치(storage)라고도 부른다. 이는 비휘발성 메모리로, 주기억장치에 비해 속도는 느리지만 가격은 저렴하여 더 넓은 공간을 이용할 수 있다. 일반적으로 사용되는 저장장치에는 USB 메모리와 하드디스크가 대표적이다.&lt;/p&gt;

&lt;h3 id=&quot;출력장치&quot;&gt;출력장치&lt;/h3&gt;
&lt;p&gt;　컴퓨터의 처리 결과를 사용자가 사용 가능한 형태나 적당한 최종적인 형태로 바꾸어 주는 장치이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;-software&quot;&gt;💾 Software&lt;/h2&gt;

&lt;p&gt;　컴퓨터를 사람에 비유하면 사람의 몸은 하드웨어이고 사람의 몸을 움직이게 하는 의지 또는 정신을 소프트웨어라 할 수 있다. 소프트웨어는 컴퓨터가 특정 작업을 수행할 수 있도록 해주는 전자적인 명령어 집합으로 구성되며 컴퓨터의 하드웨어가 해야 할 작업 내용을 지시한다.&lt;/p&gt;

&lt;p&gt;　소프트웨어는 크게 &lt;strong&gt;응용 소프트웨어&lt;/strong&gt;와 &lt;strong&gt;시스템 소프트웨어&lt;/strong&gt;로 나눈다. 시스템 소프트웨어는 컴퓨터가 잘 작동하도록 도와주는 기본 소프트웨어를 말하며 응용 소프트웨어는 문서 작성이나 인터넷 검색 같은 특정 업무에 활용되는 소프트웨어를 말한다.&lt;/p&gt;

&lt;h3 id=&quot;응용-소프트웨어&quot;&gt;응용 소프트웨어&lt;/h3&gt;
&lt;p&gt;　일반 사무실에서 문서 작성이나 간단한 회계처리 분야에 이용하는 워드프로세서, 스프레드시트 종류의 소프트웨어가 있으며 시스템 개발 분야에 이용되는 개발 도구와 데이터베이스 분야의 소프트웨어가 있다.&lt;/p&gt;

&lt;h3 id=&quot;시스템-소프트웨어&quot;&gt;시스템 소프트웨어&lt;/h3&gt;
&lt;p&gt;　크게 운영체제(Operating System)와 각종 유틸리티 프로그램으로 구분할 수 있다. 운영체제는 특정 CPU에 맞게 관련된 하드웨어를 작동하게 하고 또한 응용 소프트웨어를 실행해주는 소프트웨어이다. 유틸리티 프로그램은 운영체제를 돕고 컴퓨터 시스템이 원활하게 작동하도록 돕는다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;REFERENCE&lt;/h4&gt;
&lt;p class=&quot;notice&quot;&gt;모바일 시대의 컴퓨터개론, INFINITY BOOKS&lt;/p&gt;</content><category term="computer" /><category term="hardware" /><category term="software" /><summary></summary></entry><entry><title>Jekyll</title><link href="http://localhost:4000/Jekyll/" rel="alternate" type="text/html" title="Jekyll" /><published>2020-08-01T00:00:00+09:00</published><updated>2020-08-01T00:00:00+09:00</updated><id>http://localhost:4000/Jekyll</id><content type="html" xml:base="http://localhost:4000/Jekyll/">&lt;p&gt;&lt;br /&gt;&lt;img src=&quot;http://localhost:4000/images/jekyll-icon.png&quot; alt=&quot;Jekyll&quot; height=&quot;100&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;about-jekyll&quot;&gt;About Jekyll&lt;/h2&gt;

&lt;p&gt;　개인, 프로젝트 또는 조직 사이트를 위한 간단한 블로그 인식 정적 사이트 생성기로서 Tom Preston-Werner가 루비로 작성하였으며 오픈 소스 MIT 라이센스에 따라 배포된다. 간단히 말하면, HTML, Markdown 등 &lt;code class=&quot;highlighter-rouge&quot;&gt;다양한 포맷의 텍스트들을 읽고 가공하여 자신의 웹 사이트에 바로 게시&lt;/code&gt;할 수 있게 해주는 Rubby 언어로 만들어진 하나의 텍스트 변환 엔진이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-about-ruby&quot;&gt;💡 About Ruby&lt;/h3&gt;

&lt;p&gt;　스크립트 언어이자 동적 객체 지향 프로그래밍 언어&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;들여 쓰기는 구분하지 않지만, 대/소문자 구분 필수&lt;/li&gt;
  &lt;li&gt;’#’ 부호 뒤 작성된 내용은 한 줄 단위로 주석 처리&lt;/li&gt;
  &lt;li&gt;원시 자료형 없이 모든 것이 객체인 순수한 객체 지향 언어&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-about-scripting-language&quot;&gt;💡 About Scripting language&lt;/h3&gt;

&lt;p&gt;　기존에 존재하는 응용 소프트웨어(애플리케이션)를 제어하는 컴퓨터 프로그래밍 언어이다. 일반적인 응용 소프트웨어에서 수정이 빈번하게 발생하는 부분은 전체를 컴파일하는 것보다, 코드를 한줄씩 읽어 바로 실행하는 인터프리터 방식이 유리하다. 스크립트 언어는 이런 부분에서 사용하기 위해 나온 것으로, 응용 소프트웨어에서 스크립트 언어에 맞는 API를 제공한다. 이는 응용 소프트웨어와 상호작용하면서 돌아간다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/Git-Jekyll.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;jekyll-blog&quot;&gt;Jekyll Blog&lt;/h2&gt;

&lt;p&gt;　Jekyll을 사용해 우리는 웹 서버에 곧바로 게시할 수 있는, 완성된 정적 웹사이트를 만들 수 있다. 또한 Jekyll은 Github Pages의 내부 엔진이다. 즉, Jekyll을 사용하면 자신의 프로젝트 페이지나 블로그 웹사이트를 무료로 Github에 호스팅할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;jekyll-directory-structure&quot;&gt;Jekyll Directory Structure&lt;/h2&gt;

&lt;p class=&quot;notice&quot;&gt;. &lt;br /&gt;
┡ _config.yml &lt;br /&gt;
┡ _data &lt;br /&gt;
　┖ members.yml &lt;br /&gt;
┡ _drafts &lt;br /&gt;
　┖ begin-with-the crazy-ideas.md &lt;br /&gt;
　┖ on-simplyicity-in-technology.md &lt;br /&gt;
┡ _includes &lt;br /&gt;
　┖ footer.html &lt;br /&gt;
　┖ header.html &lt;br /&gt;
┡ _layouts &lt;br /&gt;
　┖ default.html &lt;br /&gt;
　┖ post.html &lt;br /&gt;
┡ posts &lt;br /&gt;
　┖ 2007-10-29-why-every-programmer-should-play-nethack.md &lt;br /&gt;
　┖ 2009-04-26-barcamp-boston-4-roudup.md &lt;br /&gt;
┡ _sass &lt;br /&gt;
　┖ _base.scss &lt;br /&gt;
　┖ _layout.scss &lt;br /&gt;
┡ _site &lt;br /&gt;
┡ .jekyll-metadata &lt;br /&gt;
┖ index.html # can also be an ‘index.md’ with valid front matter&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;File/Directory&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;_config.yml&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Jekyll 블로그를 구성하기 위한 기본적인 설정 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;_drafts&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;아직 공개하지 않은 블로그 포스트 보관&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;_includes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;페이지 단위의 공통 요소 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;_layouts&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;템플릿 저장&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;_posts&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;블로그 포스트 저장, 파일명 형식 : YEAR-MONTH-DAY-title.MARKUP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;_data&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;데이터 파일 저장&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;_sass&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;디자인을 위한 sass 파일 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;_site&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;jekyll에 의해 빌드된 파일 저장&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;.jekyll-metadata&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;jekyll이 변경된 내용만 빌드하기 위해 관리하는 파일&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;_indext.html or index.md&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;홈페이지의 첫 페이지&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;reference&quot;&gt;REFERENCE&lt;/h4&gt;
&lt;p class=&quot;notice&quot;&gt;https://url.kr/c3zgb4 &lt;br /&gt;
https://nachwon.github.io/jekyllblog/ &lt;br /&gt;
https://jekyllrb.com/docs/structure/ &lt;br /&gt;
https://dev-yakuza.github.io/ko/jekyll/directory_structure/&lt;/p&gt;</content><category term="jekyll" /><category term="ruby" /><category term="blog" /><summary></summary></entry></feed>
